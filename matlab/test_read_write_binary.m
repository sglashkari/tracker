clc;
clear;
header = {"%%BEGINHEADER";...
    "%Stadium-style rig for jumping rats: Created from 2D head tracking data";...
    "%Date of the Experiment: ";...
    "%Time of the Experiment: ";...
    "%File Type: Binary";...
    "%Format:";...
    "%--------------------------";...
    "%|  Timestamp   (Double)  |";...
    "%|------------------------|";...
    "%|  X coord     (Single)  |";...
    "%|------------------------|";...
    "%|  Y coord     (Single)  |";...
    "%|------------------------|";...
    "%|  Direction   (Single)  |";...
    "%--------------------------";...
    "%";...
    "%Use following record type to read in:";...
    "%Public Type PosRecord";...
    "%    TS As Double";...
    "%    X As Single";...
    "%    Y As Single";...
    "%    Dir As Single";...
    "%End Type";...
    "%%ENDHEADER"};

%% WRITE BINARY FILE with text (ascii) header
fileID = fopen('nine.bin','w');
positions = 100*rand(10,4)
format_spec = '%s\r\n';

for row = 1:size(header,1)
    fprintf(fileID,format_spec,header{row,:});
end

for row = 1:size(positions,1)
    fwrite(fileID,positions(row,1),'float64');
    fwrite(fileID,positions(row,2:4),'float32');
end

fclose(fileID);

%% READ BINARY FILE while ignoring the header
fileID = fopen('nine.bin','r');
header = arrayfun(@(~) fgetl(fileID), 1:24, 'UniformOutput', false);
row = 0;
while true
    row = row + 1;
    try
        A(row,1) = fread(fileID,1,'double');
        A(row,2:4) = fread(fileID,3,'single');
    catch
        break;
    end
end
A
fclose(fileID);

%% second method
fileID = fopen('nine.bin','r');
header = arrayfun(@(~) fgetl(fileID), 1:24, 'UniformOutput', false);
header_length = ftell(fileID);
m = memmapfile('nine.bin',...
                'Format',{'double',[1,1],'time';...
                          'single', [1,1],'x';...
                          'single',[1,1],'y';...
                          'single', [1,1],'direction'}, 'Offset', header_length);
cluster = m.Data;
T = struct2table(cluster);
T.time = seconds(T.time);
TT = table2timetable(T);
head(TT)
fclose(fileID);